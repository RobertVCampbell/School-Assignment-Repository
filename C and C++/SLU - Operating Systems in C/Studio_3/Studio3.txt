1) Robert Campbell
2)
3)
4) 
for(int i = 0; i < 11; i++){
        printf("%c\n", messagePtr[i]);
    }
5) 'H'
6) Dereferenced value: H
7) Pointer arithmetic loop:
ptr + 1: E
ptr + 2: L
ptr + 3: L

8)
for(int i = 0; i < 11; i++){
        printf("ptr + %i: %c\n", i, *(messagePtr + i));
    }
9)
    int i = 0;
    while(*(messagePtr + i) != '\0'){
        printf("%c\n", *(messagePtr + i));
        i++;
    }
10)
void printReverse ( char* string){
    int leng = 0;
    while(*(string + leng) != '\0'){
        leng++;
    }
    for(leng; leng > 0; leng--){
        printf("%c\n", *(string + leng - 1));
    }

}
11)
char* reverseString(char* input){
    int leng = 0;
    while(*(input + leng) != '\0'){
        leng++;
    }
    char *output = (char*)malloc(leng + 1);

    output[leng+1] = '\0';
    
    for(int i = 0; i < (leng); i++){
        output[i] = input[leng-i - 1];
    }
   
    return output;
}